[package]
name = "gitcg_sim"
version = "0.1.0"
edition = "2021"
default-run = "gitcg_sim_benchmark"

[profile.dev]
debug = true
opt-level = 1

[profile.release]
debug = true
codegen-units = 1
opt-level = 3

[profile.minimal]
inherits = 'release'
debug = false
strip = true
opt-level = 3
codegen-units = 1
lto = true

[features]
test = [
    "serde"
]
default = [
    # "training",
    # "serde"
]
serde = [
    "dep:serde",
    "enumset/serde",
    "rand/serde",
    "rand/serde1",
    "smallvec/serde"
]
wasm = [
    "no_parallel",
    "instant/stdweb",
    "instant/wasm-bindgen",
    "getrandom/js",
    "dep:wasm-bindgen",
    "serde"
]
no_static_status_impl = []
no_parallel = []
training = [
    "serde",
    "dep:dfdx",
    "dep:ndarray"
]

[workspace]
members = [
    "gitcg_sim_tui_app",
    "gitcg_sim_self_play"
]

[lib]
name = "gitcg_sim"
path = "src/lib.rs"

[[bin]]
name = "gitcg_sim_benchmark"
path = "benchmark/main.rs"
required-features = ["training"]

[dependencies]
atree = { version = "0.5.*" }
bitfield = { version = "0.14.*" }
dfdx = { version = "0.13.0", features = ["numpy"], optional = true }
enum-map = { version = "2.4.*" }
enum-map-derive = { version = "0.3.*" }
enumset = { version = "1.0.*", features = [] }
flurry = { version = "0.4.*" }
getrandom = { version = "0.2" }
instant = { version = "0.1" }
itertools = { version = "0.11.*" }
lazy_static = { version = "1.4.*" }
rand = { version = "0.8.*", features = ["small_rng"] }
rayon = { version = "^1.7.0" }
rustc-hash = { version = "1.1.*" }
ndarray = { version = "*", optional = true }
serde = { version = "1.0", features = ["derive", "rc"], optional = true }
smallvec = { version = "1.10.*", features = [] }
structopt = { version = "0.3.*" }
wasm-bindgen = { version = "0.2.*", optional = true }

[dev-dependencies]
bincode = { version = "1.2.1" }
serde_json = { version = "1.0.94" }
proptest = "1.0.0"

# Seeds for failure cases proptest has generated in the past. It is
# automatically read and these particular cases re-run before any
# novel cases are generated.
#
# It is recommended to check this file in to source control so that
# everyone who runs the test benefits from these saved cases.
cc a753ecc46a6202a2a0bd4b846450b6e89a78d5545373335273ed8fa61d7b73b5 # shrinks to gs = GameState { pending_cmds: None, round_number: 1, phase: SelectStartingCharacter { already_selected: None }, players: ByPlayer(PlayerState { active_char_index: 0, dice: DiceCounter([]), char_states: [CharState { char_id: Yoimiya, hp: 10, energy: 0, applied: EnumSet(), flags: EnumSet() }], status_collection: StatusCollection { responds_to: EnumSet(), responds_to_triggers: EnumSet(), responds_to_events: EnumSet(), _status_entries: [] }, hand: [], flags: EnumSet() }, PlayerState { active_char_index: 0, dice: DiceCounter([]), char_states: [CharState { char_id: Fischl, hp: 10, energy: 0, applied: EnumSet(), flags: EnumSet() }], status_collection: StatusCollection { responds_to: EnumSet(), responds_to_triggers: EnumSet(), responds_to_events: EnumSet(), _status_entries: [] }, hand: [], flags: EnumSet() }), log: EventLog { enabled: false }, ignore_costs: false, _incremental_hash: ZobristHasher(6176813755000886287), _hash: ZobristHasher(6176813755000886287) }, a = 0, b = 0
cc 0a94f9c5738a87cda650a9ab505d6f2529d7eaf2766a8ef90ad029a3ff37045b # shrinks to gs = GameStateWrapper { game_state: GameState { pending_cmds: None, round_number: 1, phase: ActionPhase { first_end_round: None, active_player: PlayerFirst }, players: ByPlayer(PlayerState { active_char_idx: 0, dice: DiceCounter([(E.Cryo, 2)]), char_states: CharStates { char_states: [CharState { char_id: Kaeya, hp: 10, energy: 1, applied: EnumSet(), flags: EnumSet(SkillCastedThisTurn0) }] }, status_collection: StatusCollection { responds_to: EnumSet(UpdateCost | TriggerEvent), responds_to_triggers: EnumSet(Switched), responds_to_events: EnumSet(), _status_entries: [StatusEntry { key: Equipment(0, Artifact, WineStainedTricorne), state: AppliedEffectState { usages_duration: 0, counter: 0, once_per_round: true } }, StatusEntry { key: Support(Slot0, LiuSu), state: AppliedEffectState { usages_duration: 2, counter: 0, once_per_round: true } }] }, hand: [ElementalResonanceWovenIce, NaganoharaMeteorSwarm], flags: EnumSet(ChargedAttack) }, PlayerState { active_char_idx: 2, dice: DiceCounter([(Omni, 3), (E.Pyro, 2), (E.Cryo, 1), (E.Geo, 1)]), char_states: CharStates { char_states: [CharState { char_id: Ningguang, hp: 8, energy: 0, applied: EnumSet(), flags: EnumSet(PlungingAttack) }, CharState { char_id: Xiangling, hp: 10, energy: 0, applied: EnumSet(), flags: EnumSet() }, CharState { char_id: Ganyu, hp: 10, energy: 0, applied: EnumSet(), flags: EnumSet() }] }, status_collection: StatusCollection { responds_to: EnumSet(), responds_to_triggers: EnumSet(), responds_to_events: EnumSet(), _status_entries: [] }, hand: [UndividedHeart, BlizzardStrayer, NorthernSmokedChicken, KyoukaFuushi, ViridescentVenerer], flags: EnumSet() }), log: EventLog { enabled: false }, ignore_costs: false, _incremental_hash: ZobristHasher(17602637233901423508), _hash: ZobristHasher(17602637233901423508) } }
cc 85df715f7ac08dd9148d885297f4d6f715c46cb9e4cb32437efd45b236605ede # shrinks to gs = GameStateWrapper { game_state: GameState { pending_cmds: None, round_number: 1, phase: ActionPhase { first_end_round: None, active_player: PlayerSecond }, players: ByPlayer(PlayerState { active_char_idx: 0, dice: DiceCounter([(Omni, 1), (E.Hydro, 1), (E.Cryo, 1), (E.Electro, 1), (E.Geo, 1)]), char_states: CharStates { char_states: [CharState { char_id: Xiangling, hp: 10, energy: 1, applied: EnumSet(), flags: EnumSet(SkillCastedThisTurn1), total_dmg_taken: 0 }, CharState { char_id: Yoimiya, hp: 10, energy: 0, applied: EnumSet(), flags: EnumSet(), total_dmg_taken: 0 }, CharState { char_id: Kaeya, hp: 10, energy: 0, applied: EnumSet(), flags: EnumSet(), total_dmg_taken: 0 }] }, status_collection: StatusCollection { responds_to: EnumSet(TriggerEvent), responds_to_triggers: EnumSet(EndPhase), responds_to_events: EnumSet(), _status_entries: [StatusEntry { key: Summon(Guoba), state: AppliedEffectState { usages_duration: 2, counter: 0, once_per_round: true } }] }, hand: [IronTongueTian, Rust, ShakenNotPurred, FavoniusSword, ArchaicPetra], flags: EnumSet() }, PlayerState { active_char_idx: 0, dice: DiceCounter([(Omni, 5), (E.Pyro, 1), (E.Dendro, 1), (E.Anemo, 1)]), char_states: CharStates { char_states: [CharState { char_id: Kaeya, hp: 10, energy: 0, applied: EnumSet(), flags: EnumSet(PlungingAttack), total_dmg_taken: 0 }] }, status_collection: StatusCollection { responds_to: EnumSet(), responds_to_triggers: EnumSet(), responds_to_events: EnumSet(), _status_entries: [] }, hand: [SteadyBreathing, GamblersEarrings, AdventurersBandana, CalxsArts], flags: EnumSet(ChargedAttack) }), log: EventLog { enabled: false }, ignore_costs: false, _incremental_hash: ZobristHasher(3895286189519191558), _hash: ZobristHasher(3895286189519191558) } }

#![allow(non_snake_case)]

use crate::{const_default_enum_impl, std_subset::hash::Hash};
use enum_map::Enum;
use enumset::EnumSetType;
use gitcg_sim_code_gen::{CharIdDerives, GeneratedEnumCasesMacro, GetCard, GetStatus, StatusIdDerives};

#[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash, Enum, CharIdDerives)]
#[cfg_attr(feature = "serde", derive(serde::Serialize, serde::Deserialize))]
pub enum CharId {
    Yoimiya,
    Kaeya,
    Fischl,
    KamisatoAyaka,
    Ganyu,
    Noelle,
    Xingqiu,
    Collei,
    Ningguang,
    Xiangling,
    FatuiPyroAgent,
    Chongyun,
    Klee,
    Diona,
    Barbara,
    Bennett,
    Mona,
    Keqing,
    Sucrose,
    Jean,
    Razor,
    Cyno,
    JadeplumeTerrorshroom,
    Diluc,
    SangonomiyaKokomi,
    KujouSara,
    Eula,
    StonehideLawachurl,
    KamisatoAyato,
    AratakiItto,
    Tighnari,
    RaidenShogun,
    Tartaglia,
    Nahida,
    HuTao,
    Amber,
    RhodeiaOfLoch,
    YaeMiko,
    Beidou,
    Yanfei,
    Shenhe,
    Candace,
    Xiao,
    Albedo,
    Venti,
    Wanderer,
    Qiqi,
    Yaoyao,
    Nilou,
    Zhongli,
}
const_default_enum_impl!(CharId, Yoimiya);

#[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash, Enum)]
#[cfg_attr(feature = "serde", derive(serde::Serialize, serde::Deserialize))]
pub enum SkillId {
    FireworkFlareUp,
    NiwabiFireDance,
    RyuukinSaxifrage,
    CeremonialBladework,
    Frostgnaw,
    GlacialWaltz,
    BoltsOfDownfall,
    Nightrider,
    MidnightPhantasmagoria,
    KamisatoArtKabuki,
    KamisatoArtHyouka,
    KamisatoArtSoumetsu,
    LiutianArchery,
    TrailOfTheQilin,
    FrostflakeArrow,
    CelestialShower,
    FavoniusBladeworkMaid,
    Breastplate,
    SweepingTime,
    GuhuaStyle,
    FatalRainscreen,
    Raincutter,
    SupplicantsBowmanship,
    FloralBrush,
    TrumpCardKitty,
    SparklingScatter,
    JadeScreen,
    Starshatter,
    DoughFu,
    GuobaAttack,
    Pyronado,
    Thrust,
    Prowl,
    BladeAblaze,
    Demonbane,
    ChonghuasLayeredFrost,
    CloudPartingStar,
    Kaboom,
    JumpyDumpty,
    SparksNSplash,
    KatzleinStyle,
    IcyPaws,
    SignatureMix,
    WhisperOfWater,
    LetTheShowBegin,
    ShiningMiracle,
    StrikeOfFortune,
    PassionOverload,
    FantasticVoyage,
    RippleOfFate,
    MirrorReflectionOfDoom,
    StellarisPhantasm,
    YunlaiSwordsmanship,
    StellarRestoration,
    StarwardSword,
    WindSpiritCreation,
    AstableAnemohypostasisCreation6308,
    ForbiddenCreationIsomer75TypeII,
    FavoniusBladework,
    GaleBlade,
    DandelionBreeze,
    SteelFang,
    ClawAndThunder,
    LightningFang,
    InvokersSpear,
    SecretRiteChasmicSoulfarer,
    SacredRiteWolfsSwiftness,
    MajesticDance,
    VolatileSporeCloud,
    FeatherSpreading,
    TemperedSword,
    SearingOnslaught,
    Dawn,
    TheShapeOfWater,
    KuragesOath,
    NereidsAscension,
    TenguBowmanship,
    TenguStormcall,
    SubjugationKoukouSendou,
    FavoniusBladeworkEdel,
    IcetideVortex,
    GlacialIllumination,
    PlamaLawa,
    MovoLawa,
    UpaShato,
    KamisatoArtMarobashi,
    KamisatoArtKyouka,
    KamisatoArtSuiyuu,
    FightClubLegend,
    MasatsuZetsugiAkaushiBurst,
    RoyalDescentBeholdIttoTheEvil,
    KhandaBarrierBuster,
    VijnanaPhalaMine,
    FashionersTanglevineShaft,
    Origin,
    TranscendenceBalefulOmen,
    SecretArtMusouShinsetsu,
    CuttingTorrent,
    FoulLegacyRagingTide,
    HavocObliteration,
    Akara,
    AllSchemesToKnow,
    AllSchemesToKnowTathata,
    IllusoryHeart,
    SecretSpearOfWangsheng,
    GuideToAfterlife,
    SpiritSoother,
    Sharpshooter,
    ExplosivePuppet,
    FieryRain,
    Surge,
    OceanidMimicSummoning,
    TheMyriadWilds,
    TideAndTorrent,
    SpiritfoxSinEater,
    YakanEvocationSesshouSakura,
    GreatSecretArtTenkoKenshin,
    Oceanborne,
    Tidecaller,
    Stormbreaker,
    Wavestrider,
    SealOfApproval,
    SignedEdict,
    DoneDeal,
    DawnstarPiercer,
    SpringSpiritSummoning,
    DivineMaidensDeliverance,
    GleamingSpearGuardianStance,
    SacredRiteHeronsSanctum,
    SacredRiteWagtailsTide,
    HeronStrike,
    WhirlwindThrust,
    LemniscaticWindCycling,
    BaneOfAllEvil,
    FavoniusBladeworkWeiss,
    AbiogenesisSolarIsotoma,
    RiteOfProgenitureTectonicTide,
    DivineMarksmanship,
    SkywardSonnet,
    WindsGrandOde,
    YuubanMeigen,
    HanegaSongOfTheWind,
    KyougenFiveCeremonialPlays,
    AncientSwordArt,
    AdeptusArtHeraldOfFrost,
    AdeptusArtPreserverOfFortune,
    TossNTurnSpear,
    RaphanusSkyCluster,
    MoonjadeDescent,
    DanceOfSamser,
    DanceOfHaftkarsvar,
    DanceOfAbzendegiDistantDreamsListeningSpring,
    RainOfStone,
    DominusLapidis,
    DominusLapidisStrikingStone,
    PlanetBefall,
}
const_default_enum_impl!(SkillId, FireworkFlareUp);

#[derive(
    Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Enum, StatusIdDerives, GetStatus, GeneratedEnumCasesMacro,
)]
#[cfg_attr(feature = "serde", derive(serde::Serialize, serde::Deserialize))]
pub enum StatusId {
    // Reactions
    CrystallizeShield,
    DendroCore,
    CatalyzingField,
    Frozen,

    // Cards
    Satiated,
    ChangingShifts,
    LeaveItToMe,
    MushroomPizza,
    AdeptusTemptation,
    WhenTheCraneReturned,
    LotusFlowerCrisp,
    MintyMeatRolls,
    NorthernSmokedChicken,

    // Equipments
    AdventurersBandana,
    LuckyDogsSilverCirclet,
    TravelingDoctorsHandkerchief,
    GamblersEarrings,
    ExilesCirclet,
    OrnateKabuto,

    BrokenRimesEcho,
    WineStainedTricorne,
    WitchsScorchingHat,
    ThunderSummonersCrown,
    ViridescentVenerersDiadem,
    MaskOfSolitudeBasalt,
    LaurelCoronet,
    BlizzardStrayer,
    HeartOfDepth,
    CrimsonWitchOfFlames,
    ThunderingFury,
    ViridescentVenerer,
    ArchaicPetra,
    DeepwoodMemories,

    MagicGuide,
    RavenBow,
    WhiteIronGreatsword,
    WhiteTassel,
    TravelersHandySword,
    SacrificialFragments,
    SacrificialBow,
    SacrificialGreatsword,
    SacrificialSword,
    SkywardAtlas,
    SkywardHarp,
    SkywardSpine,
    SkywardPride,
    WolfsGravestone,
    LithicSpear,
    FavoniusSword,
    Rust,
    AThousandFloatingDreams,
    AquilaFavonia,

    ElementalResonanceShatteringIce,
    ElementalResonanceFerventFlames,
    ElementalResonanceSprawlingGreenery,

    // Characters
    NiwabiEnshou,
    AurousBlaze,
    Icicle,
    KamisatoArtSenho,
    CryoElementalInfusion,
    IceLotus,
    FullPlate,
    SweepingTime,
    RainSword,
    RainbowBladework,
    JadeScreen,
    Pyronado,
    Stealth,
    ChonghuaFrostField,
    SparksNSplash,
    ExplosiveSpark,
    CatClawShield,
    InspirationField,
    IllusoryTorrent,
    IllusoryBubble,
    ElectroInfusion,
    TheWolfWithin,
    PactswornPathclearer,
    RadicalVitality,
    SearingOnslaughtCounter,
    PyroInfusion,
    CeremonialGarment,
    CrowfeatherCover,
    Grimheart,
    Sprout,
    Stonehide,
    StoneForce,
    TakimeguriKanka,
    SuperlativeSuperstrength,
    RagingOniKing,
    VijnanaSuffusion,
    ChakraDesiderata,
    ParamitaPapilio,
    BloodBlossom,
    TenkoThunderbolts,
    TidecallerSurfEmbrace,
    ThunderbeastsTarge,
    ScarletSeal,
    Brilliance,
    IcyQuill,
    HeronShield,
    PrayerOfTheCrimsonCrown,
    YakshasMask,
    Stormzone,
    Windfavored,
    FortunePreservingTalisman,
    AdeptalLegacy,
    GoldenChalicesBounty,
    LingeringAeon,
    Petrification,
    JadeShield,

    // Talents
    ColdBloodedStrike,
    UndividedHeart,
    Riptide,
    MeleeStance,
    RangedStance,
    SeedOfSkandha,
    ShrineOfMaya,
    RightOfFinalInterpretation,
}
const_default_enum_impl!(StatusId, CrystallizeShield);

#[allow(clippy::derived_hash_with_manual_eq)]
#[derive(Debug, PartialOrd, Ord, Hash, Enum, EnumSetType, StatusIdDerives, GetStatus, GeneratedEnumCasesMacro)]
#[cfg_attr(feature = "serde", derive(serde::Serialize, serde::Deserialize))]
#[enumset(repr = "u32")]
pub enum SummonId {
    BurningFlame,
    Oz,
    FrostflakeSekiNoTo,
    SacredCryoPearl,
    CuileinAnbar,
    Guoba,
    DrunkenMist,
    MelodyLoop,
    Reflection,
    LargeWindSpirit,
    DandelionField,
    BakeKurage,
    TenguJuuraiStormcluster,
    TenguJuuraiAmbush,
    LightfallSword,
    GardenOfPurity,
    Ushi,
    ClusterbloomArrow,
    EyeOfStormyJudgment,
    BaronBunny,
    OceanidMimicSquirrel,
    OceanidMimicRaptor,
    OceanidMimicFrog,
    SesshouSakura,
    TalismanSpirit,
    SolarIsotoma,
    Stormeye,
    HeraldOfFrost,
    YueguiThrowingMode,
    BountifulCore,
    StoneStele,
}
const_default_enum_impl!(SummonId, BurningFlame);

#[derive(
    Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash, Enum, StatusIdDerives, GetStatus, GeneratedEnumCasesMacro,
)]
#[cfg_attr(feature = "serde", derive(serde::Serialize, serde::Deserialize))]
pub enum SupportId {
    Paimon,
    Katheryne,
    DawnWinery,
    IronTongueTian,
    LiuSu,
    FavoniusCathedral,
    WangshuInn,
    LiyueHarborWharf,
    Timaeus,
    Wagner,
    Tubby,
    JadeChamber,
    KnightsOfFavoniusLibrary,
    Liben,
    SangonomiyaShrine,
    Tenshukaku,
}
const_default_enum_impl!(SupportId, Paimon);

#[allow(clippy::derived_hash_with_manual_eq)]
#[derive(Debug, PartialOrd, Ord, Hash, Enum, EnumSetType, GetCard)]
#[enumset(repr = "u128")]
#[cfg_attr(feature = "serde", derive(serde::Serialize, serde::Deserialize))]
pub enum CardId {
    BlankCard,
    TheBestestTravelCompanion,
    LeaveItToMe,
    ChangingShifts,
    Starsigns,
    SweetMadame,
    MondstadtHashBrown,
    MushroomPizza,
    LotusFlowerCrisp,
    MintyMeatRolls,
    NorthernSmokedChicken,
    LightningStiletto,
    Strategize,
    IHaventLostYet,
    AdeptusTemptation,
    WhenTheCraneReturned,
    QuickKnit,
    SendOff,
    CalxsArts,

    ElementalResonanceWovenFlames,
    ElementalResonanceWovenIce,
    ElementalResonanceWovenStone,
    ElementalResonanceWovenThunder,
    ElementalResonanceWovenWaters,
    ElementalResonanceWovenWeeds,
    ElementalResonanceWovenWinds,

    ElementalResonanceShatteringIce,
    ElementalResonanceFerventFlames,
    ElementalResonanceHighVoltage,
    ElementalResonanceSprawlingGreenery,

    AdventurersBandana,
    LuckyDogsSilverCirclet,
    TravelingDoctorsHandkerchief,
    GamblersEarrings,
    ExilesCirclet,
    OrnateKabuto,

    BrokenRimesEcho,
    WineStainedTricorne,
    WitchsScorchingHat,
    ThunderSummonersCrown,
    ViridescentVenerersDiadem,
    MaskOfSolitudeBasalt,
    LaurelCoronet,
    BlizzardStrayer,
    HeartOfDepth,
    CrimsonWitchOfFlames,
    ThunderingFury,
    ViridescentVenerer,
    ArchaicPetra,
    DeepwoodMemories,

    TravelersHandySword,
    SacrificialFragments,
    SacrificialBow,
    SacrificialGreatsword,
    SacrificialSword,
    SkywardAtlas,
    SkywardHarp,
    SkywardSpine,
    SkywardPride,
    WolfsGravestone,
    LithicSpear,
    FavoniusSword,
    Rust,
    AThousandFloatingDreams,
    AquilaFavonia,

    Paimon,
    Katheryne,
    DawnWinery,
    IronTongueTian,
    LiuSu,
    FavoniusCathedral,
    WangshuInn,
    Timaeus,
    Wagner,
    Tubby,
    KnightsOfFavoniusLibrary,
    JadeChamber,
    Liben,
    SangonomiyaShrine,
    Tenshukaku,

    NaganoharaMeteorSwarm,
    KantenSenmyouBlessing,
    IGotYourBack,
    Crossfire,
    FloralSidewinder,
    FlowingFlame,
    ProphecyOfSubmersion,
    StrategicReserve,
    LandsOfDandelion,
    TheScentRemained,
    PoundingSurprise,
    ThunderingPenance,
    PaidInFull,
    SteadyBreathing,
    GrandExpectation,
    GloriousSeason,
    ShakenNotPurred,
    ColdBloodedStrike,
    UndividedHeart,
    KyoukaFuushi,
    WishesUnnumbered,
    KeenSight,
    SanguineRouge,
    RightOfFinalInterpretation,
    MysticalAbandon,
    TheOverflow,
    DescentOfDivinity,
    Beneficent,
    TheStarrySkiesTheirFlowersRain,
}
const_default_enum_impl!(CardId, BlankCard);
